
# this should be the folder name under `ios` for your project
project_name = 'lifegaurds'
project_name_new = 'lifeguards'

# NOTE: This is meant to be run on CI where it changes everything before building the app.
# Usage:
#   `RN_RELEASE_TYPE=uat|demo|production RN_RELEASE_NAME=Uat-LifeGuards|Demo-LifeGuards fastlane prep_release_type`
#
# RN_RELEASE_TYPE - type of lifeguards environment (uat|demo|production)
# RN_RELEASE_NAME - display name on user mobile (Uat-LifeGuards|Demo-LifeGuards). If RN_RELEASE_TYPE = production,
#                   then default value set in config file is used
desc "Updates the app identifier, display name and icon for uat, demo, and production releases"
lane :prep_release_type do
  # uat, demo, production
  type = ENV['RN_RELEASE_TYPE'] || 'production'
  next if type == 'production'

  suffix = type
  # assumes identifier is defined in Appfile
  app_id = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  new_app_id = "#{app_id}#{suffix}"
  display_name = ENV['RN_DISPLAY_NAME'] || type.capitalize

  UI.message "\n\nSetting app identifier to: #{new_app_id}"
  UI.message "\n\nSetting Display Name to: #{display_name}"

  # update ios indentifier and display name
  update_info_plist(
    plist_path: "#{project_name}/Info.plist",
    xcodeproj: "./ios/#{project_name_new}.xcodeproj",
    display_name: display_name,
    app_identifier: new_app_id
  )

  # update android suffix
  set_value_in_build(
    app_project_dir: "./android/app",
    key: "applicationIdSuffix",
    value: ".#{suffix}"
  )

  # update android display name
  update_android_strings(
    block: lambda { |strings|
      strings['app_name'] = display_name
    }
  )
end
